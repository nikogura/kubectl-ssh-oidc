name: CI

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'

env:
  GO_VERSION: '1.24'

jobs:
  test:
    name: Unit, Lint, and End-to-End Integration Tests
    runs-on: ubuntu-latest

    outputs:
      semver: ${{steps.semver.outputs.version_tag}}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Semver
      uses: paulhatch/semantic-version@v5.1.0
      with:
        bump_each_commit: true
      id: semver

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Download dependencies
      run: go mod download

    - name: Run unit tests first
      run: make test

    - name: Lint
      uses: golangci/golangci-lint-action@v8
      with:
        version: latest
        verify: false

    - name: Run linting
      run: make lint

    # - name: Run integration tests
    #   run: make test-integration
    #   timeout-minutes: 10

    - name: Upload test logs on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: integration-test-logs-${{ github.run_id }}
        path: |
          test/integration/*.log
          /tmp/kubectl-ssh-oidc-integration-*/
        retention-days: 7

    - name: Clean up integration environment
      if: always()
      run: make clean-integration

  publish:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Tag Repo
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{secrets.TAGGING_PAT}}
          custom_tag: ${{needs.test.outputs.semver}}
          tag_prefix: ""

      - name: Publish Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TAGGING_PAT }}
        with:
          tag_name: ${{needs.test.outputs.semver}}
          release_name: ${{needs.test.outputs.semver}}
          draft: false
          prerelease: false